#version 430

layout(binding = 0, rgba32f) restrict readonly uniform image2D TerrainDataRead;
layout(binding = 1, rgba32f) restrict writeonly uniform image2D TerrainDataWrite;
layout(binding = 2, r32f) restrict uniform image2D FlowReadWrite;

// compute shader size
layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
void main()
{
	ivec2 gridPosition = ivec2(gl_GlobalInvocationID.xy);

	vec4 terrainInfo = imageLoad(TerrainDataRead, gridPosition);
	float flow = imageLoad(FlowReadWrite, gridPosition).r;

	// Todo: Uniformbuffer
	const float TimeStep = 1.0f / 60.0f;
	const float FlowFriction_perStep = 0.998f;//pow(0.99f, TimeStep);
	const float WaterAccelerationSquare_DivByArea_perStep = 50.0f * TimeStep;
	const float UnderTerrainSigma = 0.001f;

	float ownWaterHeight = terrainInfo.r + terrainInfo.a;

	// Todo: Shared memory
	vec4 terrainInfoX1 = imageLoad(TerrainDataRead, gridPosition + ivec2(1, 0));
	float waterHeightX1 = terrainInfoX1.a > UnderTerrainSigma ? (terrainInfoX1.a + terrainInfoX1.r) : ownWaterHeight;

	vec4 terrainInfoX0 = imageLoad(TerrainDataRead, gridPosition + ivec2(-1, 0));
	float waterHeightX0 = terrainInfoX0.a > UnderTerrainSigma ? (terrainInfoX0.a + terrainInfoX0.r) : ownWaterHeight;

	vec4 terrainInfoY1 = imageLoad(TerrainDataRead, gridPosition + ivec2(0, 1));
	float waterHeightY1 = terrainInfoY1.a > UnderTerrainSigma ? (terrainInfoY1.a + terrainInfoY1.r) : ownWaterHeight;

	vec4 terrainInfoY0 = imageLoad(TerrainDataRead, gridPosition + ivec2(0, -1));
	float waterHeightY0 = terrainInfoY0.a > UnderTerrainSigma ? (terrainInfoY0.a + terrainInfoY0.r) : ownWaterHeight;

	// acceleration = cÂ² * (Height Differences in every direction) / Area
	float pressureDelta = waterHeightX1 + waterHeightX0 + waterHeightY1 + waterHeightY0 - 4.0f * ownWaterHeight;
	flow += pressureDelta * WaterAccelerationSquare_DivByArea_perStep;
	flow *= FlowFriction_perStep;

	terrainInfo.a += flow * TimeStep;

	
	if(terrainInfo.a < 0.0f)
	{
		flow -= terrainInfo.a / TimeStep;
		terrainInfo.a = 0.0f;
	}

	//if(gridPosition.x > 400 && gridPosition.x < 420 && gridPosition.y > 400 && gridPosition.y < 420)
	//	terrainInfo.a = 1.0f;

	// Store stuff.
	imageStore(FlowReadWrite, gridPosition, vec4(flow));
	imageStore(TerrainDataWrite, gridPosition, terrainInfo);
}